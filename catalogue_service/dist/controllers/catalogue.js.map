{"version":3,"sources":["../../src/controllers/catalogue.js"],"names":["req","res","locationID","params","locationProduct","reduce","acc","curr","concat","id","category","channels","filter","channel","location","status","json"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,GAAD,EAAMC,GAAN,EAAc;;AAEzB;AACA,QAAMC,aAAaF,IAAIG,MAAJ,CAAWD,UAA9B;;AAEA;AACA,QAAME,kBAAkB,eAAKC,MAAL,CAAa,UAACC,GAAD,EAAMC,IAAN;AAAA,eACjCD,IAAIE,MAAJ,CAAW;AACPC,gBAAIF,KAAKE,EADF;AAEPC,sBAAUH,KAAKG,QAFR;AAGPC,sBAAUJ,KAAKI,QAAL,CAAcC,MAAd,CAAqB;AAAA,uBACnBC,QAAQC,QAAR,KAAqBZ,UAArB,IAAmCW,QAAQC,QAAR,KAAqB,UADrC;AAAA,aAArB,CAHH,EAAX,CADiC;AAAA,KAAb,EAMjB,EANiB,CAAxB;;AAQA;AACAb,QAAIc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBZ,eAArB;AAEH,C","file":"catalogue.js","sourcesContent":["import Data from '../Data';\n\nexport default (req, res) => {\n\n    // Extract location ID from parameters\n    const locationID = req.params.locationID;\n\n    // Filter channels by the provided location and always include national channels\n    const locationProduct = Data.reduce( (acc, curr) =>\n        acc.concat({\n            id: curr.id,\n            category: curr.category,\n            channels: curr.channels.filter(channel =>\n                        channel.location === locationID || channel.location === 'NATIONAL')}\n        ), []);\n\n    // Return product channels\n    res.status(200).json(locationProduct);\n\n};"]}