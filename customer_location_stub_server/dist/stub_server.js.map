{"version":3,"sources":["../src/stub_server.js"],"names":["app","port","process","env","PORT","server","createServer","listen","console","log","CUSTOMER_ID_1","CUSTOMER_ID_2","LOCATION_1","LOCATION_2","RESPONSE_ERROR","get","req","res","next","header","status","send","customerId","params","customer_id"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AACA,IAAMC,SAAS,eAAKC,YAAL,CAAkBN,GAAlB,CAAf;AACAK,OAAOE,MAAP,CAAcN,IAAd;;AAEA;AACAO,QAAQC,GAAR,CAAY,uBAAZ,EAAqCR,IAArC;;AAEA,IAAMS,gBAAgB,YAAtB;AACA,IAAMC,gBAAgB,YAAtB;AACA,IAAMC,aAAa,QAAnB;AACA,IAAMC,aAAa,WAAnB;AACA,IAAMC,iBAAiB,yDAAvB;;AAEA;AACAd,IAAIe,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC9BD,QAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAD;AACH,CAHD;;AAKAlB,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC7BA,QAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,cAArB;AACH,CAFD;;AAKAd,IAAIe,GAAJ,CAAQ,eAAR,EAAyB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;;AAE5C,QAAMK,aAAaN,IAAIO,MAAJ,CAAWC,WAA9B;;AAEG,YAAOF,UAAP;AACI,aAAK,CAACA,UAAD,KAAgBZ,aAArB;AACIO,gBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,cAArB;AACA;AACJ,aAAK,CAACQ,UAAD,KAAgBX,aAArB;AACIM,gBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,cAArB;AACA;AACJ,aAAKJ,aAAL;AACIO,gBAAII,IAAJ,CAAST,UAAT;AACA;AACJ,aAAKD,aAAL;AACIM,gBAAII,IAAJ,CAASR,UAAT;AACA;AACJ;AACII,gBAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,cAArB;AAdR;AAiBH,CArBD","file":"stub_server.js","sourcesContent":["import express from 'express';\nimport http from 'http';\n\nconst app = express();\nconst port = process.env.PORT || 3002;\nconst server = http.createServer(app);\nserver.listen(port);\n\n// Print connection status\nconsole.log('Server listening on: ', port);\n\nconst CUSTOMER_ID_1 = 'customer_1';\nconst CUSTOMER_ID_2 = 'customer_2';\nconst LOCATION_1 = 'LONDON';\nconst LOCATION_2 = 'LIVERPOOL';\nconst RESPONSE_ERROR = 'There was a problem retrieving the customer information';\n\n// global controller to allow CORS\napp.get('/*', (req, res, next) => {\n    res.header('Access-Control-Allow-Origin', '*');\n    next();\n});\n\napp.get('/', function (req, res) {\n    res.status(404).send(RESPONSE_ERROR)\n});\n\n\napp.get('/:customer_id', function (req, res) {\n\n\tconst customerId = req.params.customer_id;\n\n    switch(customerId) {\n        case !customerId !== CUSTOMER_ID_1:\n            res.status(404).send(RESPONSE_ERROR);\n            break;\n        case !customerId !== CUSTOMER_ID_2:\n            res.status(404).send(RESPONSE_ERROR);\n            break;\n        case CUSTOMER_ID_1:\n            res.send(LOCATION_1);\n            break;\n        case CUSTOMER_ID_2:\n            res.send(LOCATION_2);\n            break;\n        default:\n            res.status(404).send(RESPONSE_ERROR);\n    }\n    \n});\n\n\n\n\n\n\n"]}